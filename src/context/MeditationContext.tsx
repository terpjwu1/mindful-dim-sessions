
import React, { createContext, useContext, useState, useEffect } from 'react';
import { toast } from '@/components/ui/use-toast';

export interface Meditation {
  id: string;
  title: string;
  description: string;
  audioUrl: string;
  duration: number;
  isDefault: boolean;
  imageUrl: string;
}

interface MeditationContextType {
  meditations: Meditation[];
  selectedMeditation: Meditation | null;
  isPlaying: boolean;
  duration: number;
  setSelectedMeditation: (meditation: Meditation) => void;
  setDuration: (duration: number) => void;
  setIsPlaying: (isPlaying: boolean) => void;
  addMeditation: (meditation: Partial<Meditation>) => void;
  isDimmed: boolean;
  setIsDimmed: (isDimmed: boolean) => void;
}

// Base64 encoded very short MP3 files (1-2 seconds each)
// These are fallback embedded audio files that will always work
const embeddedAudioFiles = {
  'self-compassion-break': 'data:audio/mp3;base64,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',
  'affectionate-breathing': 'data:audio/mp3;base64,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',
  'loving-kindness': 'data:audio/mp3;base64,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'
};

const defaultMeditations: Meditation[] = [
  {
    id: '1',
    title: 'Self-Compassion Break',
    description: 'A practice to remind yourself to apply the three components of self-compassion in daily life.',
    audioUrl: '/audio/self-compassion-break.mp3',
    duration: 300, // 5 minutes in seconds
    isDefault: true,
    imageUrl: '/placeholder.svg'
  },
  {
    id: '2',
    title: 'Affectionate Breathing',
    description: 'A meditation on the breath, with a focus on gentle, affectionate awareness.',
    audioUrl: '/audio/affectionate-breathing.mp3',
    duration: 1320, // 22 minutes in seconds
    isDefault: true,
    imageUrl: '/placeholder.svg'
  },
  {
    id: '3',
    title: 'Loving-Kindness Meditation',
    description: 'A meditation that focuses on developing feelings of goodwill, kindness, and warmth towards ourselves and others.',
    audioUrl: '/audio/loving-kindness.mp3',
    duration: 1200, // 20 minutes in seconds
    isDefault: true,
    imageUrl: '/placeholder.svg'
  }
];

const MeditationContext = createContext<MeditationContextType | undefined>(undefined);

export const MeditationProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [meditations, setMeditations] = useState<Meditation[]>(defaultMeditations);
  const [selectedMeditation, setSelectedMeditation] = useState<Meditation | null>(null);
  const [duration, setDuration] = useState<number>(300); // Default 5 minutes
  const [isPlaying, setIsPlaying] = useState<boolean>(false);
  const [isDimmed, setIsDimmed] = useState<boolean>(false);

  // Load meditations from local storage
  useEffect(() => {
    const savedMeditations = localStorage.getItem('meditations');
    if (savedMeditations) {
      try {
        const parsedMeditations = JSON.parse(savedMeditations);
        setMeditations([...defaultMeditations, ...parsedMeditations.filter((m: Meditation) => !m.isDefault)]);
      } catch (error) {
        console.error('Error parsing saved meditations:', error);
      }
    }
  }, []);

  // Save meditations to local storage when they change
  useEffect(() => {
    const customMeditations = meditations.filter(m => !m.isDefault);
    if (customMeditations.length > 0) {
      localStorage.setItem('meditations', JSON.stringify(customMeditations));
    }
  }, [meditations]);

  const addMeditation = (meditation: Partial<Meditation>) => {
    const newMeditation: Meditation = {
      id: Date.now().toString(),
      title: meditation.title || 'Untitled Meditation',
      description: meditation.description || '',
      audioUrl: meditation.audioUrl || '',
      duration: meditation.duration || 300,
      isDefault: false,
      imageUrl: meditation.imageUrl || '/placeholder.svg'
    };
    setMeditations([...meditations, newMeditation]);
  };

  return (
    <MeditationContext.Provider
      value={{
        meditations,
        selectedMeditation,
        isPlaying,
        duration,
        setSelectedMeditation,
        setDuration,
        setIsPlaying,
        addMeditation,
        isDimmed,
        setIsDimmed
      }}
    >
      {children}
    </MeditationContext.Provider>
  );
};

export const useMeditation = () => {
  const context = useContext(MeditationContext);
  if (context === undefined) {
    throw new Error('useMeditation must be used within a MeditationProvider');
  }
  return context;
};
